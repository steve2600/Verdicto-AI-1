import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { History, Download, Trash2, Eye, FileText } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { toast } from "sonner";
import { useMutation, useQuery } from "convex/react";
import { api } from "@/convex/_generated/api";

export default function LiveVerdictHistory() {
  const [selectedHistoryNote, setSelectedHistoryNote] = useState<any>(null);
  
  const notesHistory = useQuery(api.verdictNotes.list);
  const deleteNote = useMutation(api.verdictNotes.deleteNote);

  const downloadNotes = (notes: any, title?: string) => {
    const content = `
${title || 'LIVE VERDICT NOTES'}
Generated: ${new Date(notes.timestamp).toLocaleString()}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

TRANSCRIPT:
${notes.transcript}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

KEY POINTS:
${notes.bulletPoints.map((point: string, idx: number) => `${idx + 1}. ${point}`).join('\n')}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

AI SUMMARY:
${notes.aiSummary}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Generated by LexAI - Legal AI Assistant
    `.trim();

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `verdict-notes-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast.success("Notes downloaded!");
  };

  const handleDeleteNote = async (noteId: any) => {
    try {
      await deleteNote({ noteId });
      toast.success("Note deleted from history");
    } catch (error) {
      toast.error("Failed to delete note");
    }
  };

  return (
    <div className="min-h-screen p-8">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="max-w-6xl mx-auto"
      >
        <div className="mb-8">
          <h1 className="text-4xl font-bold mb-2 text-foreground">Live Verdict History</h1>
          <p className="text-muted-foreground">
            Access and manage your previously generated verdict notes and reports
          </p>
        </div>

        {notesHistory && notesHistory.length > 0 ? (
          <div className="grid gap-4">
            {notesHistory.map((note: any) => (
              <motion.div
                key={note._id}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.3 }}
              >
                <Card className="p-4 hover:shadow-lg transition-shadow">
                  <div className="flex items-start justify-between gap-4">
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-2">
                        <FileText className="h-5 w-5 text-primary" />
                        <h3 className="font-semibold text-foreground">{note.title}</h3>
                      </div>
                      <p className="text-sm text-muted-foreground mb-2">
                        {new Date(note.timestamp).toLocaleString()}
                      </p>
                      <p className="text-sm text-muted-foreground line-clamp-2">
                        {note.aiSummary}
                      </p>
                    </div>
                    <div className="flex gap-2">
                      <Button
                        size="sm"
                        variant="outline"
                        onClick={() => setSelectedHistoryNote(note)}
                        className="gap-2"
                      >
                        <Eye className="h-4 w-4" />
                        View
                      </Button>
                      <Button
                        size="sm"
                        variant="outline"
                        onClick={() => downloadNotes(note, note.title)}
                        className="gap-2"
                      >
                        <Download className="h-4 w-4" />
                      </Button>
                      <Button
                        size="sm"
                        variant="outline"
                        onClick={() => handleDeleteNote(note._id)}
                        className="gap-2 text-destructive hover:text-destructive"
                      >
                        <Trash2 className="h-4 w-4" />
                      </Button>
                    </div>
                  </div>
                </Card>
              </motion.div>
            ))}
          </div>
        ) : (
          <Card className="p-8 text-center">
            <History className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
            <p className="text-muted-foreground">
              No verdict notes in history yet. Generate notes from a transcript in the Live Verdict page to see them here.
            </p>
          </Card>
        )}

        {/* History Note Detail Modal */}
        <AnimatePresence>
          {selectedHistoryNote && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50"
              onClick={() => setSelectedHistoryNote(null)}
            >
              <motion.div
                initial={{ scale: 0.9, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                exit={{ scale: 0.9, opacity: 0 }}
                onClick={(e) => e.stopPropagation()}
                className="bg-background rounded-lg p-6 max-w-3xl w-full max-h-[80vh] overflow-y-auto"
              >
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-2xl font-bold">{selectedHistoryNote.title}</h3>
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => setSelectedHistoryNote(null)}
                  >
                    ✕
                  </Button>
                </div>

                <p className="text-sm text-muted-foreground mb-4">
                  {new Date(selectedHistoryNote.timestamp).toLocaleString()}
                </p>

                <Separator className="my-4" />

                <div className="space-y-4">
                  <div>
                    <h4 className="font-semibold mb-2">Transcript</h4>
                    <div className="bg-muted/50 p-4 rounded-lg max-h-48 overflow-y-auto">
                      <p className="text-sm text-muted-foreground whitespace-pre-wrap">
                        {selectedHistoryNote.transcript}
                      </p>
                    </div>
                  </div>

                  <div>
                    <h4 className="font-semibold mb-2">Key Points</h4>
                    <div className="bg-muted/50 p-4 rounded-lg">
                      <ul className="space-y-2">
                        {selectedHistoryNote.bulletPoints.map((point: string, idx: number) => (
                          <li key={idx} className="flex gap-2 text-foreground">
                            <span className="text-primary font-semibold">{idx + 1}.</span>
                            <span>{point}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>

                  <div>
                    <h4 className="font-semibold mb-2">AI Summary</h4>
                    <div className="bg-muted/50 p-4 rounded-lg">
                      <p className="text-muted-foreground leading-relaxed">
                        {selectedHistoryNote.aiSummary}
                      </p>
                    </div>
                  </div>

                  <Button
                    onClick={() => downloadNotes(selectedHistoryNote, selectedHistoryNote.title)}
                    className="w-full gap-2"
                  >
                    <Download className="h-4 w-4" />
                    Download Notes
                  </Button>
                </div>
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>
    </div>
  );
}
